{
  "components": {
    "comp-dataflow-flex-template": {
      "executorLabel": "exec-dataflow-flex-template",
      "inputDefinitions": {
        "parameters": {
          "additional_experiments": {
            "defaultValue": [],
            "description": "Additional experiment flags for the job.",
            "isOptional": true,
            "parameterType": "LIST"
          },
          "additional_user_labels": {
            "defaultValue": {},
            "description": "Additional user labels to be specified for the job. Keys and values must follow the restrictions specified in the labeling restrictions page (https://cloud.google.com/compute/docs/labeling-resources#restrictions). An object containing a list of \"key\": value pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1kg\", \"count\": \"3\" }`.",
            "isOptional": true,
            "parameterType": "STRUCT"
          },
          "autoscaling_algorithm": {
            "defaultValue": "",
            "description": "The algorithm to use for autoscaling. If empty or unspecified, the Dataflow service sets a default value. For more details, see https://cloud.google.com/dataflow/docs/reference/pipeline-options#resource_utilization.",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "container_spec_gcs_path": {
            "description": "Cloud Storage path to a file with json serialized ContainerSpec as content.",
            "parameterType": "STRING"
          },
          "disk_size_gb": {
            "defaultValue": 0.0,
            "description": "Worker disk size, in gigabytes. If empty or unspecified, the Dataflow service determines an appropriate disk size.",
            "isOptional": true,
            "parameterType": "NUMBER_INTEGER"
          },
          "dump_heap_on_oom": {
            "defaultValue": false,
            "description": "If true, when processing time is spent almost entirely on garbage collection (GC), saves a heap dump before ending the thread or process. If false, ends the thread or process without saving a heap dump. Does not save a heap dump when the Java Virtual Machine (JVM) has an out of memory error during processing. The location of the heap file is either echoed back to the user, or the user is given the opportunity to download the heap file.",
            "isOptional": true,
            "parameterType": "BOOLEAN"
          },
          "enable_launcher_vm_serial_port_logging": {
            "defaultValue": false,
            "description": "If true serial port logging will be enabled for the launcher VM.",
            "isOptional": true,
            "parameterType": "BOOLEAN"
          },
          "enable_streaming_engine": {
            "defaultValue": false,
            "description": "Whether to enable Streaming Engine for the job.",
            "isOptional": true,
            "parameterType": "BOOLEAN"
          },
          "flexrs_goal": {
            "defaultValue": "",
            "description": "Set FlexRS goal for the job. For more details, see https://cloud.google.com/dataflow/docs/guides/flexrs.",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "ip_configuration": {
            "defaultValue": "",
            "description": "Configuration for VM IPs.",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "job_name": {
            "defaultValue": "",
            "description": "The job name to use for the created job. For update job requests, the job name should be the same as the existing running job. If none is specified, a default name will be generated by the component.",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "kms_key_name": {
            "defaultValue": "",
            "description": "Name for the Cloud KMS key for the job. Key format is \"projects/HOST_PROJECT_ID/locations/LOCATION/keyRings/KEYRING_ID/cryptoKeys/CRYPTO_KEY_ID\"",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "launch_options": {
            "defaultValue": {},
            "description": "Launch options for this flex template job. This is a common set of options across languages and templates. This should not be used to pass job parameters.",
            "isOptional": true,
            "parameterType": "STRUCT"
          },
          "launcher_machine_type": {
            "defaultValue": "",
            "description": "The machine type to use for launching the Dataflow job. The default is n1-standard-1.",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "location": {
            "defaultValue": "us-central1",
            "description": "The regional endpoint to which to direct the request. E.g., us-central1, us-west1. Defaults to `us-central1` if not set.",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "machine_type": {
            "defaultValue": "",
            "description": "The machine type to use for the Dataflow job. Defaults to the value from the template if not specified.",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "max_workers": {
            "defaultValue": 0.0,
            "description": "The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000. If empty or unspecified, the Dataflow service determines a default maximum number of instances. For more details, see https://cloud.google.com/dataflow/docs/horizontal-autoscaling.",
            "isOptional": true,
            "parameterType": "NUMBER_INTEGER"
          },
          "network": {
            "defaultValue": "",
            "description": "Network to which VMs will be assigned. If empty or unspecified, the service will use the network \"default\".",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "num_workers": {
            "defaultValue": 0.0,
            "description": "The initial number of Google Compute Engine instances for the job. If empty or unspecified, the Dataflow service determines an appropriate number of workers.",
            "isOptional": true,
            "parameterType": "NUMBER_INTEGER"
          },
          "parameters": {
            "defaultValue": {},
            "description": "The parameters for the flex template. Ex. {\"my_template_param\":\"5\"}",
            "isOptional": true,
            "parameterType": "STRUCT"
          },
          "project": {
            "defaultValue": "{{$.pipeline_google_cloud_project_id}}",
            "description": "The ID of the Cloud Platform project that the job belongs to. Defaults to the project in which the PipelineJob is run.",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "save_heap_dumps_to_gcs_path": {
            "defaultValue": "",
            "description": "Cloud Storage bucket (directory) to upload heap dumps to. Enabling this field implies that dump_heap_on_oom is set to true.",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "sdk_container_image": {
            "defaultValue": "",
            "description": "Docker registry location (e.g. Artifact Registry) of the container image to use for the worker harness. Default is the container for the version of the SDK. Note this field is only valid for portable Dataflow pipeline jobs.",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "service_account_email": {
            "defaultValue": "",
            "description": "The email address of the service account to run the job as. If unspecified, the Dataflow service uses the project's Compute Engine default service account.",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "staging_location": {
            "defaultValue": "",
            "description": "The Cloud Storage path for staging local files. Must be a valid Cloud Storage URL, beginning with gs://. For more details, see https://cloud.google.com/dataflow/docs/guides/setting-pipeline-options#setting_required_options.",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "subnetwork": {
            "defaultValue": "",
            "description": "Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form \"https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK\" or \"regions/REGION/subnetworks/SUBNETWORK\". If the subnetwork is located in a Shared VPC network, you must use the complete URL.",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "temp_location": {
            "defaultValue": "",
            "description": "The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with gs://. For more details, see https://cloud.google.com/dataflow/docs/guides/setting-pipeline-options#setting_required_options.",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "transform_name_mappings": {
            "defaultValue": {},
            "description": "Use this to pass transformNameMappings for streaming update jobs. Example: `{\"oldTransformName\":\"newTransformName\",...}`. For more details, see https://cloud.google.com/dataflow/docs/guides/updating-a-pipeline#Mapping",
            "isOptional": true,
            "parameterType": "STRUCT"
          },
          "update": {
            "defaultValue": false,
            "description": "Set this to true if you are sending a request to update a running streaming job. When set, the job name should be the same as the running job.",
            "isOptional": true,
            "parameterType": "BOOLEAN"
          },
          "validate_only": {
            "defaultValue": false,
            "description": "If true, the request is validated but not actually executed. Defaults to false.",
            "isOptional": true,
            "parameterType": "BOOLEAN"
          },
          "worker_region": {
            "defaultValue": "",
            "description": "The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1\". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane's region.",
            "isOptional": true,
            "parameterType": "STRING"
          },
          "worker_zone": {
            "defaultValue": "",
            "description": "The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1-a\". Mutually exclusive with workerRegion. If neither worker_region nor worker_zone is specified, a zone in the control plane's region is chosen based on available capacity.",
            "isOptional": true,
            "parameterType": "STRING"
          }
        }
      },
      "outputDefinitions": {
        "parameters": {
          "gcp_resources": {
            "parameterType": "STRING"
          }
        }
      }
    },
    "comp-get-previous-model": {
      "executorLabel": "exec-get-previous-model",
      "inputDefinitions": {
        "parameters": {
          "bucket_name": {
            "parameterType": "STRING"
          }
        }
      },
      "outputDefinitions": {
        "parameters": {
          "Output": {
            "parameterType": "STRING"
          }
        }
      }
    }
  },
  "deploymentSpec": {
    "executors": {
      "exec-dataflow-flex-template": {
        "container": {
          "args": [
            "--type",
            "DataflowJob",
            "--project",
            "{{$.inputs.parameters['project']}}",
            "--location",
            "{{$.inputs.parameters['location']}}",
            "--payload",
            "{\"Concat\": [\"{\", \"\\\"launch_parameter\\\": {\", \"\\\"job_name\\\": \\\"\", \"{{$.inputs.parameters['job_name']}}\", \"\\\"\", \", \\\"container_spec_gcs_path\\\": \\\"\", \"{{$.inputs.parameters['container_spec_gcs_path']}}\", \"\\\"\", \", \\\"parameters\\\": \", \"{{$.inputs.parameters['parameters']}}\", \", \\\"launch_options\\\": \", \"{{$.inputs.parameters['launch_options']}}\", \", \\\"environment\\\": {\", \"\\\"num_workers\\\": \", \"{{$.inputs.parameters['num_workers']}}\", \", \\\"max_workers\\\": \", \"{{$.inputs.parameters['max_workers']}}\", \", \\\"service_account_email\\\": \\\"\", \"{{$.inputs.parameters['service_account_email']}}\", \"\\\"\", \", \\\"temp_location\\\": \\\"\", \"{{$.inputs.parameters['temp_location']}}\", \"\\\"\", \", \\\"machine_type\\\": \\\"\", \"{{$.inputs.parameters['machine_type']}}\", \"\\\"\", \", \\\"additional_experiments\\\": \", \"{{$.inputs.parameters['additional_experiments']}}\", \", \\\"network\\\": \\\"\", \"{{$.inputs.parameters['network']}}\", \"\\\"\", \", \\\"subnetwork\\\": \\\"\", \"{{$.inputs.parameters['subnetwork']}}\", \"\\\"\", \", \\\"additional_user_labels\\\": \", \"{{$.inputs.parameters['additional_user_labels']}}\", \", \\\"kms_key_name\\\": \\\"\", \"{{$.inputs.parameters['kms_key_name']}}\", \"\\\"\", \", \\\"ip_configuration\\\": \\\"\", \"{{$.inputs.parameters['ip_configuration']}}\", \"\\\"\", \", \\\"worker_region\\\": \\\"\", \"{{$.inputs.parameters['worker_region']}}\", \"\\\"\", \", \\\"worker_zone\\\": \\\"\", \"{{$.inputs.parameters['worker_zone']}}\", \"\\\"\", \", \\\"enable_streaming_engine\\\": \", \"{{$.inputs.parameters['enable_streaming_engine']}}\", \", \\\"flexrs_goal\\\": \\\"\", \"{{$.inputs.parameters['flexrs_goal']}}\", \"\\\"\", \", \\\"staging_location\\\": \\\"\", \"{{$.inputs.parameters['staging_location']}}\", \"\\\"\", \", \\\"sdk_container_image\\\": \\\"\", \"{{$.inputs.parameters['sdk_container_image']}}\", \"\\\"\", \", \\\"disk_size_gb\\\": \", \"{{$.inputs.parameters['disk_size_gb']}}\", \", \\\"autoscaling_algorithm\\\": \\\"\", \"{{$.inputs.parameters['autoscaling_algorithm']}}\", \"\\\"\", \", \\\"dump_heap_on_oom\\\": \", \"{{$.inputs.parameters['dump_heap_on_oom']}}\", \", \\\"save_heap_dumps_to_gcs_path\\\": \\\"\", \"{{$.inputs.parameters['save_heap_dumps_to_gcs_path']}}\", \"\\\"\", \", \\\"launcher_machine_type\\\": \\\"\", \"{{$.inputs.parameters['launcher_machine_type']}}\", \"\\\"\", \", \\\"enable_launcher_vm_serial_port_logging\\\": \", \"{{$.inputs.parameters['enable_launcher_vm_serial_port_logging']}}\", \"}\", \", \\\"update\\\": \", \"{{$.inputs.parameters['update']}}\", \", \\\"transform_name_mappings\\\": \", \"{{$.inputs.parameters['transform_name_mappings']}}\", \"}\", \", \\\"validate_only\\\": \", \"{{$.inputs.parameters['validate_only']}}\", \"}\"]}",
            "--gcp_resources",
            "{{$.outputs.parameters['gcp_resources'].output_file}}"
          ],
          "command": [
            "python3",
            "-u",
            "-m",
            "google_cloud_pipeline_components.container.preview.dataflow.flex_template.launcher"
          ],
          "image": "gcr.io/ml-pipeline/google-cloud-pipeline-components:2.19.0"
        }
      },
      "exec-get-previous-model": {
        "container": {
          "args": [
            "--executor_input",
            "{{$}}",
            "--function_to_execute",
            "get_previous_model"
          ],
          "command": [
            "sh",
            "-c",
            "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet --no-warn-script-location 'kfp==2.10.1' '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&  python3 -m pip install --quiet --no-warn-script-location 'google-cloud-storage' && \"$0\" \"$@\"\n",
            "sh",
            "-ec",
            "program_path=$(mktemp -d)\n\nprintf \"%s\" \"$0\" > \"$program_path/ephemeral_component.py\"\n_KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n",
            "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import *\n\ndef get_previous_model(bucket_name: str) -> str:\n    \"\"\"Fetch the previous model version from GCS.\"\"\"\n    from google.cloud import storage\n    client = storage.Client()\n    bucket = client.bucket(bucket_name)\n    blobs = list(bucket.list_blobs(prefix=\"v-\"))\n\n    model_versions = sorted(\n        [blob.name for blob in blobs if \"v-\" in blob.name],\n        reverse=True\n    )\n\n    latest_model = model_versions[0] if model_versions else \"None\"\n    print(f\"Latest model version: {latest_model}\")\n    return latest_model\n\n"
          ],
          "image": "python:3.10"
        }
      }
    }
  },
  "pipelineInfo": {
    "description": "Pipeline that orchestrates Dataflow preprocessing, training, and Cloud Run deployment.",
    "name": "creature-vision-pipeline"
  },
  "root": {
    "dag": {
      "tasks": {
        "dataflow-flex-template": {
          "cachingOptions": {
            "enableCache": true
          },
          "componentRef": {
            "name": "comp-dataflow-flex-template"
          },
          "dependentTasks": [
            "get-previous-model"
          ],
          "inputs": {
            "parameters": {
              "container_spec_gcs_path": {
                "componentInputParameter": "gcs_template_path"
              },
              "job_name": {
                "runtimeValue": {
                  "constant": "creature-vis-training"
                }
              },
              "location": {
                "componentInputParameter": "region"
              },
              "parameters": {
                "runtimeValue": {
                  "constant": {
                    "max_files": "100",
                    "version": "{{$.inputs.parameters['pipelinechannel--get-previous-model-Output']}}"
                  }
                }
              },
              "pipelinechannel--get-previous-model-Output": {
                "taskOutputParameter": {
                  "outputParameterKey": "Output",
                  "producerTask": "get-previous-model"
                }
              },
              "service_account_email": {
                "componentInputParameter": "service_account"
              }
            }
          },
          "taskInfo": {
            "name": "dataflow-flex-template"
          }
        },
        "get-previous-model": {
          "cachingOptions": {
            "enableCache": true
          },
          "componentRef": {
            "name": "comp-get-previous-model"
          },
          "inputs": {
            "parameters": {
              "bucket_name": {
                "componentInputParameter": "model_bucket"
              }
            }
          },
          "taskInfo": {
            "name": "get-previous-model"
          }
        }
      }
    },
    "inputDefinitions": {
      "parameters": {
        "gcs_template_path": {
          "parameterType": "STRING"
        },
        "inference_image": {
          "parameterType": "STRING"
        },
        "model_bucket": {
          "parameterType": "STRING"
        },
        "pipeline_root": {
          "parameterType": "STRING"
        },
        "project_id": {
          "parameterType": "STRING"
        },
        "region": {
          "parameterType": "STRING"
        },
        "service_account": {
          "parameterType": "STRING"
        },
        "training_image": {
          "parameterType": "STRING"
        }
      }
    }
  },
  "schemaVersion": "2.1.0",
  "sdkVersion": "kfp-2.10.1"
}