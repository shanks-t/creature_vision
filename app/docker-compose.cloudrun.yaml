version: '3.8'

services:
  dog-prediction-app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILDPLATFORM=linux/amd64
        - TARGETARCH=amd64
    image: gcr.io/${PROJECT_ID}/dog-prediction-app:latest
    platform: linux/amd64
    ports:
      - "8080:8080"
    volumes:
      - ~/.config/gcloud:/root/.config/gcloud
    environment:
      - PORT=8080
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1'
    depends_on:
      tfserving:
        condition: service_healthy

  tfserving:
    image: gcr.io/${PROJECT_ID}/tfserving:latest
    platform: linux/amd64
    ports:
      - "8501:8501"  # REST API
      - "8500:8500"  # gRPC
    volumes:
      - ../models:/models
    environment:
      - MODEL_NAME=dog_classifier
    command: 
      - "--model_config_file=/models/models.config"
      - "--model_config_file_poll_wait_seconds=60"
    deploy:
      resources:
        limits:
          memory: 3G
          cpus: '2'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/v1/models/dog_classifier"]
      interval: 30s
      timeout: 10s
      retries: 5

#   prometheus:
#     image: prom/prometheus:v2.30.3
#     ports:
#       - "9090:9090"
#     volumes:
#       - ./prom/prometheus.yml:/etc/prometheus/prometheus.yml
#       - ./prom/rules.yml:/etc/prometheus/rules.yml
#     command:
#       - '--config.file=/etc/prometheus/prometheus.yml'
#       - '--storage.tsdb.path=/prometheus'
#       - '--web.console.libraries=/usr/share/prometheus/console_libraries'
#       - '--web.console.templates=/usr/share/prometheus/consoles'
#     deploy:
#       resources:
#         limits:
#           memory: 512M
#           cpus: '0.5'
  
#   grafana:
#     image: grafana/grafana:latest
#     ports:
#       - "3000:3000"
#     environment:
#       - GF_AUTH_ANONYMOUS_ENABLED=true
#       - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
#       - GF_AUTH_DISABLE_LOGIN_FORM=true
#     volumes:
#       - grafana-storage:/var/lib/grafana
#       - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
#       - ./grafana/dashboards:/etc/grafana/dashboards
#       - ./grafana/provisioning:/etc/grafana/provisioning
#     depends_on:
#       - prometheus
#     deploy:
#       resources:
#         limits:
#           memory: 512M
#           cpus: '0.5'

# volumes:
#   grafana-storage: